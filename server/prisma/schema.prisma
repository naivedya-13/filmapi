generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Film {
  ID                              String    @id @default(uuid())
  FilmID                          String   @unique
  ShortCode                       String?
  Title                           String?
  Rating                          String?
  RatingDescription               String? @db.VarChar(255)
  Synopsis                        String? @db.VarChar(255)
  SynopsisAlt                     String? @db.VarChar(255)
  ShortSynopsis                   String? @db.VarChar(255)
  HOFilmCode                      String?
  CorporateFilmId                 String?
  RunTime                         Int?
  OpeningDate                     String?
  GraphicUrl                      String?
  FilmNameUrl                     String?
  TrailerUrl                      String?
  IsComingSoon                    Boolean
  IsScheduledAtCinema             Boolean
  TitleAlt                        String?
  RatingAlt                       String?
  RatingDescriptionAlt            String? @db.VarChar(255)
  ShortSynopsisAlt                String? @db.VarChar(255)
  WebsiteUrl                      String?
  GenreId                         String?
  GenreId2                        String?
  GenreId3                        String?
  EDICode                         String?
  TwitterTag                      String?
  FilmWebId                       String?
  MovieXchangeCode                String?
  DistributorName                 String?
  GovernmentCode                  String?
  SynopsisTranslations            Json?
  TitleTranslations               Json?
  ShortSynopsisTranslations       Json?
  RatingDescriptionTranslations   Json?
  AdditionalUrls                  Json?
  FormatCodes                     Json?
  CustomerRatingStatistics        Json?
  CustomerRatingTrailerStatistics Json?
  ticketPrice                     Int 
  booking                         Booking[]
  Session                         Session[]
}

model Cinema {
  CinemaID                             String    @id @default(uuid())
  CinemaNationalId                     String?
  Name                                 String?
  NameAlt                              String?
  ScheduledFilm                        Json?
  MinimumTicketPriceInCents            Int?
  Showtime                             String?
  IsAllocatedSeating                   String?
  AllowChildAdmits                     String?
  SeatsAvailable                       Int?
  AllowComplimentaryTickets            String?
  EventId                              String?
  GlobalEventId                        String?
  PriceGroupCode                       String?
  ScreenName                           String?
  ScreenNameAlt                        String?
  ScreenNumber                         Int?
  CinemaOperatorCode                   String?
  FormatCode                           String?
  FormatHOPK                           String?
  SalesChannels                        String?
  Attributes                           Json?
  ShortNameTranslations                Json?
  MessageTranslations                  Json?
  SessionAttributeCinemaIDs            Json?
  IsPromoted                           String?
  SessionAttributesNames               Json?
  ConceptAttributesNames               Json?
  AllowTicketSales                     String?
  HasDynamicallyPricedTicketsAvailable String?
  PlayThroughId                        String?
  SessionBusinessDate                  String?
  SessionDisplayPriority               Int?
  GroupSessionsByAttribute             String?
  SoldoutStatus                        String?
  TypeCode                             String?
  InSeatDeliveryFee                    Json?
  FirstDaysSessions                    Json?
  Session                              Session[]
}

model Screen {
  ID             String  @id @default(uuid())
  ScreenID       String @unique
  AttributeID    String?
  CinemaId       String?
  ScreenNumber   Int?
  ShortName      String?
  IsConcept      String?
  Description    String?
  DescriptionAlt String?
}

model Session {
  ID                                   String  @id @default(uuid())
  CinemaId                             String
  cinema                               Cinema  @relation(fields: [CinemaId], references: [CinemaID])
  ScheduledFilmId                      String
  film                                 Film @relation(fields:[ScheduledFilmId], references:[FilmID])
  SessionId                            String?
  AreaCategoryCodes                    Json?
  MinimumTicketPriceInCents            Int?
  Showtime                             String?
  IsAllocatedSeating                   String?
  AllowChildAdmits                     String?
  SeatsAvailable                       Int?
  AllowComplimentaryTickets            String?
  EventId                              String?
  GlobalEventId                        String?
  PriceGroupCode                       String?
  ScreenName                           String?
  ScreenNameAlt                        String?
  ScreenNumber                         Int?
  CinemaOperatorCode                   String?
  FormatCode                           String?
  FormatHOPK                           String?
  SalesChannels                        String?
  Attributes                           Json?
  SessionAttributesNames               Json?
  ConceptAttributesNames               Json?
  AllowTicketSales                     String?
  HasDynamicallyPricedTicketsAvailable String?
  PlayThroughId                        String?
  SessionBusinessDate                  String?
  SessionDisplayPriority               String?
  GroupSessionsByAttribute             String?
  SoldoutStatus                        Int?
  TypeCode                             String?
  InSeatDeliveryFee                    Json?
}

model Booking {
  ID                String   @id @default(uuid())
  filmId            String
  film              Film     @relation(fields: [filmId], references: [FilmID])
  customerName      String
  customerEmail     String
  showTime          String
  seats             Json
  totalAmount       Float
  Bookingstatus     String   @default("PENDING")
  Transactionstatus String
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}
